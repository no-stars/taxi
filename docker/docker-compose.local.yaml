version: "3.9"

services:
  kafka-local:
    container_name: ${PROJECT_NAME}-kafka-local
    build: ./images/kafka
    ports:
      - 19092:19092
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,CONNECTIONS_FROM_HOST://:19092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-local:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-local:9092,CONNECTIONS_FROM_HOST://localhost:19092
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - backend
      - kafka

  kafka-ui-local:
    container_name: ${PROJECT_NAME}-kafka-ui-local
    build: ./images/kafka-ui
    ports:
      - ${KAFKA_UI_EXPOSE_PORT}:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
    volumes:
      - ~/kui/config.yml:/etc/kafkaui/dynamic_config.yaml
    networks:
      - kafka
    depends_on:
      - kafka-local

  schema-registry:
    container_name: ${PROJECT_NAME}-schema-registry-local
    build: ./images/schema-registry
    ports:
      - '8081:8081'
    environment:
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
      - SCHEMA_REGISTRY_KAFKA_BROKERS=PLAINTEXT://kafka-local:9092
    networks:
      - kafka
    depends_on:
      - kafka-local

  redis-local:
    container_name: ${PROJECT_NAME}-redis-local
    build: ./images/redis
    command: >
      --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_EXPOSE_PORT}:6379
    volumes:
      - redis_data:/root/redis
      - ~/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - backend

#  gateway:
#    container_name: ${PROJECT_NAME}-gateway
#    build:
#      context: ../../apps/gateway
#      dockerfile: Dockerfile
#    command: ["node", "dist/main"]
#    ports:
#      - "3000:3000"
#    volumes:
#      - ../../:/usr/src/app
#      - /usr/src/app/node_modules
#    restart: "unless-stopped"
#    depends_on:
#      - postgres-local
#      - kafka-local
#    networks:
#      - backend
#
  postgres-local:
    container_name: ${PROJECT_NAME}-postgres-local
    build: ./images/postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
    volumes:
      - pg_data:${PGDATA}
    ports:
      - ${POSTGRES_EXPOSE_PORT}:5432
    networks:
      - pgadmin
      - backend

  pgadmin-local:
    container_name: ${PROJECT_NAME}-pgadmin-local
    build: ./images/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - ${PGADMIN_EXPOSE_PORT}:80
    networks:
      - pgadmin

networks:
  backend:
  kafka:
  pgadmin:

volumes:
  pg_data:
  pgadmin:
  kafka_data:
  redis_data:
